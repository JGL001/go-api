// package models

// type Hub struct {
// 	// Registered clients.
// 	clients map[*Node]bool

// 	// Inbound messages from the clients.
// 	broadcast chan []byte

// 	// Register requests from the clients.
// 	register chan *Node

// 	// Unregister requests from Nodes.
// 	unregister chan *Node
// }

// func newHub() *Hub {
// 	return &Hub{
// 		broadcast:  make(chan []byte),
// 		register:   make(chan *Node),
// 		unregister: make(chan *Node),
// 		clients:    make(map[*Node]bool),
// 	}
// }
// func (h *Hub) run() {
// 	for {
// 		select {
// 		case client := <-h.register:
// 			h.clients[client] = true
// 		case client := <-h.unregister:
// 			if _, ok := h.clients[client]; ok {
// 				delete(h.clients, client)
// 				close(client.send)
// 			}
// 		case message := <-h.broadcast:
// 			for client := range h.clients {
// 				select {
// 				case client.send <- message:
// 				default:
// 					close(client.send)
// 					delete(h.clients, client)
// 				}
// 			}
// 		}
// 	}
// }